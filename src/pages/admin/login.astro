---
import Layout from '../../layouts/Layout.astro';

// Redirect if already logged in
if (Astro.locals.admin) {
  return Astro.redirect('/admin/dashboard');
}
---

<Layout title="Admin Login - LbisTech">
  <div class="min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8">
    <div class="sm:mx-auto sm:w-full sm:max-w-md">
      <div class="flex justify-center">
        <div class="w-12 h-12 bg-gradient-to-br from-primary-900 to-primary-700 rounded-full flex items-center justify-center">
          <span class="text-white font-bold text-xl">L</span>
        </div>
      </div>
      <h2 class="mt-6 text-center text-3xl font-extrabold text-gray-900">
        Admin Login
      </h2>
      <p class="mt-2 text-center text-sm text-gray-600">
        Access the LbisTech admin dashboard
      </p>
    </div>

    <div class="mt-8 sm:mx-auto sm:w-full sm:max-w-md">
      <div class="bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10">
        <form id="admin-login-form" class="space-y-6">
          <div>
            <label for="email" class="block text-sm font-medium text-gray-700">
              Email address
            </label>
            <div class="mt-1">
              <input
                id="email"
                name="email"
                type="email"
                autocomplete="email"
                required
                class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-coral-500 focus:border-coral-500 sm:text-sm"
                placeholder="admin@lbistech.com"
              />
            </div>
          </div>

          <div>
            <label for="password" class="block text-sm font-medium text-gray-700">
              Password
            </label>
            <div class="mt-1">
              <input
                id="password"
                name="password"
                type="password"
                autocomplete="current-password"
                required
                class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-coral-500 focus:border-coral-500 sm:text-sm"
              />
            </div>
          </div>

          <div>
            <button
              type="submit"
              id="login-btn"
              class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-coral-500 hover:bg-coral-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-coral-500 disabled:opacity-50 disabled:cursor-not-allowed"
            >
              Sign in
            </button>
          </div>
        </form>

        <div id="error-message" class="hidden mt-4 bg-red-50 border border-red-200 rounded-md p-4">
          <div class="flex">
            <svg class="h-5 w-5 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <div class="ml-3">
              <p class="text-sm text-red-800" id="error-text">
                Invalid email or password. Please try again.
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  const form = document.getElementById('admin-login-form') as HTMLFormElement;
  const loginBtn = document.getElementById('login-btn') as HTMLButtonElement;
  const errorMessage = document.getElementById('error-message') as HTMLDivElement;
  const errorText = document.getElementById('error-text') as HTMLParagraphElement;

  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    loginBtn.disabled = true;
    loginBtn.textContent = 'Signing in...';
    errorMessage.classList.add('hidden');

    const formData = new FormData(form);
    
    try {
      const response = await fetch('/api/admin/login', {
        method: 'POST',
        body: formData
      });

      const result = await response.json();

      if (response.ok && result.success) {
        window.location.href = '/admin/dashboard';
      } else {
        errorText.textContent = result.error || 'Login failed. Please try again.';
        errorMessage.classList.remove('hidden');
      }
    } catch (error) {
      errorText.textContent = 'Network error. Please try again.';
      errorMessage.classList.remove('hidden');
    } finally {
      loginBtn.disabled = false;
      loginBtn.textContent = 'Sign in';
    }
  });
</script>