---
import type { Course } from '../lib/supabase';

interface Props {
  course: Course;
}

const { course } = Astro.props;
---

<div class="bg-white rounded-xl shadow-lg overflow-hidden hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1">
  <div class="relative">
    <img 
      src={course.image} 
      alt={course.title}
      class="w-full h-48 object-cover"
    />
    <div class="absolute top-4 right-4">
      {course.is_free ? (
        <span class="bg-green-500 text-white px-3 py-1 rounded-full text-sm font-semibold">
          Free
        </span>
      ) : (
        <span class="bg-coral-500 text-white px-3 py-1 rounded-full text-sm font-semibold">
          ${course.price}
        </span>
      )}
    </div>
  </div>
  
  <div class="p-6">
    <h3 class="text-xl font-bold text-gray-900 mb-2">{course.title}</h3>
    <p class="text-gray-600 mb-4">{course.description}</p>
    
    <div class="flex items-center justify-between mb-4">
      <div class="flex items-center space-x-4">
        <span class="text-sm text-gray-500">
          <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
          {course.duration}
        </span>
      </div>
    </div>
    
    {course.schedule && (
      <div class="mb-4 p-3 bg-blue-50 rounded-lg">
        <div class="text-sm text-blue-800">
          <div class="font-semibold">Schedule: {course.schedule}</div>
          {course.timing && <div>Time: {course.timing}</div>}
        </div>
      </div>
    )}
    
    {!course.is_free && course.originalPrice && course.originalPrice > course.price && (
      <div class="mb-4 p-3 bg-green-50 rounded-lg border border-green-200">
        <div class="flex items-center justify-between text-sm">
          <span class="text-gray-600 line-through">PKR {course.originalPrice.toLocaleString()}</span>
          <span class="text-green-600 font-semibold">
            {Math.round(((course.originalPrice - course.price) / course.originalPrice) * 100)}% OFF
          </span>
        </div>
        <div class="text-lg font-bold text-green-700">PKR {course.price.toLocaleString()}</div>
      </div>
    )}
    
    <div class="mb-4">
      <h4 class="font-semibold text-gray-900 mb-2">What you'll learn:</h4>
      <ul class="space-y-1">
        {course.features.slice(0, 3).map(feature => (
          <li class="text-sm text-gray-600 flex items-center">
            <svg class="w-4 h-4 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
            </svg>
            {feature}
          </li>
        ))}
      </ul>
    </div>
    
    <div class="flex space-x-3">
      <a 
        href={`/enroll/${course.id}`} 
        class="flex-1 bg-coral-500 hover:bg-coral-600 text-white px-4 py-2 rounded-lg text-center font-semibold transition-colors"
      >
        {course.is_free ? 'Enroll Free' : 'Enroll Now'}
      </a>
      <a 
        href={`/courses/${course.id}`} 
        class="flex-1 border border-gray-300 hover:border-coral-500 text-gray-700 hover:text-coral-500 px-4 py-2 rounded-lg text-center font-semibold transition-colors"
      >
        Learn More
      </a>
    </div>
  </div>
</div>
