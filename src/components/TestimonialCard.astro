---
interface Props {
  name: string;
  title: string;
  company: string;
  rating: number;
  review: string;
  avatar?: string;
  course?: string;
}

const { name, title, company, rating, review, avatar, course } = Astro.props;

// Generate star rating
const stars = Array.from({ length: 5 }, (_, i) => i < rating);
---

<div class="bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1">
  <!-- Star Rating -->
  <div class="flex items-center mb-4">
    {stars.map(filled => (
      <svg 
        class={`w-5 h-5 ${filled ? 'text-yellow-400' : 'text-gray-300'}`} 
        fill="currentColor" 
        viewBox="0 0 20 20"
      >
        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
      </svg>
    ))}
    <span class="ml-2 text-sm text-gray-600">({rating}/5)</span>
  </div>
  
  <!-- Review Text -->
  <blockquote class="text-gray-700 mb-6 leading-relaxed">
    "{review}"
  </blockquote>
  
  <!-- Reviewer Info -->
  <div class="flex items-center">
    <div class="w-12 h-12 bg-gradient-to-br from-coral-500 to-coral-600 rounded-full flex items-center justify-center mr-4">
      {avatar ? (
        <img src={avatar} alt={name} class="w-full h-full rounded-full object-cover" />
      ) : (
        <span class="text-white font-bold text-lg">
          {name.split(' ').map(n => n[0]).join('')}
        </span>
      )}
    </div>
    <div>
      <h4 class="font-semibold text-gray-900">{name}</h4>
      <p class="text-sm text-gray-600">{title}</p>
      <p class="text-sm text-coral-500 font-medium">{company}</p>
      {course && (
        <p class="text-xs text-gray-500 mt-1">Course: {course}</p>
      )}
    </div>
  </div>
</div>